#############################
### App loader definition ###
#############################

play.application.loader = com.slick.init.impl.SlickExampleAppLoader
akka.actor.provider = "akka.cluster.ClusterActorRefProvider"

play.http.secret.key="changeme"
play.http.secret.key=${?APPLICATION_SECRET}

#############################
### Databas configuration ###
#############################

db.default {
  driver = "org.postgresql.Driver"
  url = "jdbc:postgresql://localhost:5432/db"
  user = "user"
  password = "pass"
}


lagom.persistence {

  read-side.jdbc {

    slick.jndiDbName = DefaultDB
    slick {
      profile = "slick.jdbc.PostgresProfile$"
      driver = "slick.driver.PostgresDriver$"
    }
  }

  jdbc {

    # Configuration for creating tables
    create-tables {

      # Whether tables should be created automatically as needed
      auto = false

      # How long to wait for tables to be created, before failing
      timeout = 20s

      # The cluster role to create tables from
      run-on-role = ""

      # Exponential backoff for failures configuration for creating tables
      failure-exponential-backoff {

        # minimum (initial) duration until processor is started again
        # after failure
        min = 3s

        # the exponential back-off is capped to this duration
        max = 30s

        # additional random delay is based on this factor
        random-factor = 0.2
      }
    }
  }
}

lagom.services {
  lms-service = "http://<anyhost>:<port>"
}

http.port = 9100
http.port = ${?HTTP_PORT}
